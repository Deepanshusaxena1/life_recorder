version: 2.1

executors:
  test_executor:
    docker:
      - image: circleci/python:3.8.6
        environment:
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
          DB_USER: root
          DB_PASSWORD: ""
          PIPENV_VENV_IN_PROJECT: true
          SECRET_KEY: 8qic+elwpfebo&-)op_#96f_($q(2rw8s9tt!++ou6$934qs-f
      - image: circleci/postgres:11.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          POSTGRES_PASSWORD: ""

commands:
  restore_pipenv:
    description: "read cache of the 'pipenv install' result"
    steps:
      - restore_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}-{{ .Environment.CACHE_VERSION }}

  save_pipenv_cache:
    description: "save 'pipenv install' result into cache"
    steps:
      - save_cache:
          key: deps9-{{ .Branch }}-{{ checksum "Pipfile.lock" }}
          paths:
            - "venv"

jobs:
  build:
    executor: test_executor
    steps:
      - checkout
      - restore_pipenv
      - run:
          command: |
            sudo pip install pipenv
            pipenv install --dev
      - save_pipenv_cache
      - run:
          command: |
            mkdir test-results
            pipenv run pytest -v --junitxml=test-results/junit.xml
      # upload and store test result into circleci
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results
          destination: tr1

  deploy-heroku:
    machine:
      image: circleci/classic:edge
    environment:
      # HEROKU_API_KEY: You have to set this on CircleCI web console Project Settings.
      HEROKU_APP: "siruku6-life-recorder"
    steps:
      - checkout
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app $HEROKU_APP
      - run:
          name: heroku deploy
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP.git $CIRCLE_BRANCH:main
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app $HEROKU_APP

workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build
      - deploy-heroku:
          requires:
            - build
          # filters:
          #   branches:
          #     only: master
